using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static int Curve(int score)
    {
        if (score >= 60 && score <= 79) score += 5;
        else if (score >= 80 && score <= 89) score += 3;
        if (score > 100) score = 100;
        return score;
    }

    static string Bucket(int score)
    {
        if (score >= 90) return "A";
        if (score >= 80) return "B";
        if (score >= 70) return "C";
        if (score >= 60) return "D";
        return "F";
    }

    static void Main()
    {
        List<(string name, int score, string grade)> list = new List<(string, int, string)>();

        while (true)
        {
            Console.Write("Enter name (END to stop): ");
            string name = Console.ReadLine();
            if (name.ToUpper() == "END") break;

            Console.Write("Enter score: ");
            int score;
            if (!int.TryParse(Console.ReadLine(), out score) || score < 0 || score > 100)
            {
                Console.WriteLine("Invalid score");
                continue;
            }

            int finalScore = Curve(score);
            string grade = Bucket(finalScore);
            list.Add((name, finalScore, grade));
        }

        Console.WriteLine("\nBuckets:");
        string[] order = { "A", "B", "C", "D", "F" };
        foreach (var g in order)
        {
            var group = list.Where(x => x.grade == g).ToList();
            if (group.Count > 0)
                Console.WriteLine($"{g}: {string.Join(", ", group.Select(x => x.name))}");
        }
    }
}
